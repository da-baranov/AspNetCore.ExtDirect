<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERR_ACTION_NOT_FOUND" xml:space="preserve">
    <value>Cannot find action "{0}" in provider with ID "{1}"</value>
  </data>
  <data name="ERR_CANNOT_FIND_API_BY_ID" xml:space="preserve">
    <value>Failed to locate Ext Direct service by ID "{0}". Consider to check the Ext Direct services configuration.</value>
  </data>
  <data name="ERR_DUPLICATE_ACTION" xml:space="preserve">
    <value>ExtDirect action with name "{0}" has already been registered. Action names should be unique.</value>
  </data>
  <data name="ERR_DUPLICATE_API_ID" xml:space="preserve">
    <value>ID of API provider being registered must be unique ("{0}")</value>
  </data>
  <data name="ERR_DUPLICATE_API_NAME" xml:space="preserve">
    <value>Name of API provider being registered must be unique ("{0}")</value>
  </data>
  <data name="ERR_EMPTY_PROVIDER_ID" xml:space="preserve">
    <value>Invalid argument. Provider ID should not be empty. Consider to check the Ext Direct services configuration.</value>
  </data>
  <data name="ERR_EMPTY_PROVIDER_NAME" xml:space="preserve">
    <value>Invalid argument. Provider name should not be empty. Consider to check the Ext Direct services configuration.</value>
  </data>
  <data name="ERR_INVALID_ARG_TYPE" xml:space="preserve">
    <value>Invalid type of input Ext Direct action method arguments (action: {0}, method: {1}, type of method arguments: {2}). Arguments should be of type javascript Array, javascript Object, or scalar value (string, number, bool, or Date)</value>
  </data>
  <data name="ERR_INVALID_EXT_REQUEST" xml:space="preserve">
    <value>Invalid input JSON or multipart data. Expecting an instance of Object, or an Array, or a Form request according Ext Direct Specification.</value>
  </data>
  <data name="ERR_INVALID_JSON" xml:space="preserve">
    <value>Invalid JSON input data.</value>
  </data>
  <data name="ERR_INVALID_PROVIDER_NAME" xml:space="preserve">
    <value>Provider name "{0}" must be a valid JavaScript identifier.</value>
  </data>
  <data name="ERR_NOT_CONFIGURED" xml:space="preserve">
    <value>AspNetCore.ExtDirect configuration error. Some configuration methods (IServiceProvider.AddExtDirect and other) should be called to configure the library.</value>
  </data>
  <data name="ERR_NO_SUCH_METHOD" xml:space="preserve">
    <value>Method not found ("{0}").</value>
  </data>
  <data name="ERR_POLLING_HANDLER_TOO_MANY_PARAMETERS" xml:space="preserve">
    <value>Too many parameters </value>
  </data>
  <data name="ERR_WRONG_PROVIDER_TYPE" xml:space="preserve">
    <value>Cannot use Remoting provider with ID "{0}" as Polling provider and vice versa.</value>
  </data>
</root>